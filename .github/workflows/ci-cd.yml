name: CI Backend and Frontend

on:
  push:
    branches:
      - main

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: db_user_iscod
          POSTGRES_PASSWORD: db_password_iscod
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Vérification du code
        uses: actions/checkout@v2

      - name: Installation de JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Construction et tests du backend
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: db_user_iscod
          SPRING_DATASOURCE_PASSWORD: db_password_iscod
        run: |
          cd back
          mvn clean package
          mvn test
          mvn jacoco:report

  build-and-test-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Vérification du code
        uses: actions/checkout@v2

      - name: Installation de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Installation des dépendances et tests du frontend
        run: |
          cd front
          npm install
          npm run test -- --watch=false --browsers=ChromeHeadless

      - name: Construction du frontend
        run: |
          cd front
          npm run build

  push-to-docker-hub:
    runs-on: ubuntu-latest
    needs: [build-and-test-backend, build-and-test-frontend]
    steps:
      - name: Vérification du code
        uses: actions/checkout@v2

      - name: Connexion à Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Construction et push de l'image backend
        run: |
          cd back
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/project-backend:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/project-backend:latest

      - name: Construction et push de l'image frontend
        run: |
          cd front
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/project-frontend:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/project-frontend:latest
